"use strict";(self.webpackChunkproduct_docs=self.webpackChunkproduct_docs||[]).push([[8408],{1313:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=t(5893),n=t(1151);const s={description:"Create a new coverage policy or delete an old policy with the emnify Portal",last_update:{date:"01-09-2024"},slug:"/how-tos/create-coverage-policies"},c="Create a new coverage policy",r={id:"how-tos/device-policies/create-coverage-policies",title:"Create a new coverage policy",description:"Create a new coverage policy or delete an old policy with the emnify Portal",source:"@site/docs/how-tos/device-policies/create-coverage-policies.md",sourceDirName:"how-tos/device-policies",slug:"/how-tos/create-coverage-policies",permalink:"/pr-preview/pr-282/how-tos/create-coverage-policies",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1704758400,formattedLastUpdatedAt:"Jan 9, 2024",frontMatter:{description:"Create a new coverage policy or delete an old policy with the emnify Portal",last_update:{date:"01-09-2024"},slug:"/how-tos/create-coverage-policies"},sidebar:"mainDocsSidebar",previous:{title:"Create a new service policy",permalink:"/pr-preview/pr-282/how-tos/create-service-policies"},next:{title:"Assign devices to a policy",permalink:"/pr-preview/pr-282/how-tos/assign-devices-to-policies"}},a={},l=[{value:"Delete a coverage policy",id:"delete-a-coverage-policy",level:2},{value:"Next steps",id:"next-steps",level:2}];function d(e){const o={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.h1,{id:"create-a-new-coverage-policy",children:"Create a new coverage policy"}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.a,{href:"https://portal.emnify.com/sign",children:"Log in to your emnify account"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:["Navigate to the ",(0,i.jsx)(o.a,{href:"https://portal.emnify.com/device-policies#coverage-policies",children:(0,i.jsx)(o.strong,{children:"Coverage Policies"})})," section of ",(0,i.jsx)(o.strong,{children:"Device Policies"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:["Select ",(0,i.jsx)(o.strong,{children:"New coverage policy"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:["Replace ",(0,i.jsx)(o.strong,{children:"New coverage policy"})," with the name of your policy and add a ",(0,i.jsx)(o.strong,{children:"Description"}),".\nThen, choose a ",(0,i.jsx)(o.strong,{children:"Data Plan"})," and ",(0,i.jsx)(o.strong,{children:"Data allowance"})," from the available options."]}),"\n",(0,i.jsxs)(o.li,{children:["Finally, click ",(0,i.jsx)(o.strong,{children:"Create"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(o.p,{children:["By default, connectivity is disabled, and any devices assigned to this coverage policy are blocked from all networks.\nYou need to enable at least one ",(0,i.jsx)(o.strong,{children:"Coverage area"})," for your devices to connect."]}),"\n",(0,i.jsx)(o.p,{children:"Changes save automatically."}),"\n",(0,i.jsx)(o.admonition,{type:"tip",children:(0,i.jsx)(o.p,{children:"Creating multiple coverage policies lets you differentiate between device types based on their coverage needs and the associated costs."})}),"\n",(0,i.jsx)(o.h2,{id:"delete-a-coverage-policy",children:"Delete a coverage policy"}),"\n",(0,i.jsxs)(o.p,{children:["Click the trash bin icon next to ",(0,i.jsx)(o.strong,{children:"Details"})," to remove a coverage policy."]}),"\n",(0,i.jsx)(o.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,i.jsxs)(o.p,{children:["Coverage policies only become useful after you start assigning devices to them.\nFor instructions on how to do this in the emnify Portal, see ",(0,i.jsx)(o.a,{href:"/how-tos/assign-devices-to-policies",children:"Assign devices to a policy"}),"."]})]})}function p(e={}){const{wrapper:o}={...(0,n.a)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>r,a:()=>c});var i=t(7294);const n={},s=i.createContext(n);function c(e){const o=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),i.createElement(s.Provider,{value:o},e.children)}}}]);